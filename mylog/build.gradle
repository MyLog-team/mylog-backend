plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'mylog_backend'
version = '0.0.1-SNAPSHOT'

jar {
	archiveBaseName.set('mylog')
	archiveVersion.set('0.0.1-SNAPSHOT')
}


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testRuntimeOnly 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 테스트 코드에서도 롬복 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// validation 추가
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// JWT (jjwt 사용)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// 비밀번호 암호화
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// swagger UI를 위한 문서화 의존성
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// JVM 환경 변수 세팅
	implementation 'io.github.cdimascio:dotenv-java:2.2.4'


}

tasks.named('test') {
	useJUnitPlatform()
}
